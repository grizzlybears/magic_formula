#!/usr/bin/python2 -S
# -*- coding: utf-8 -*-
import sys
reload(sys)
sys.setdefaultencoding("utf-8")

import site
import traceback
import codecs
import os
import sqlite3
#import pprint
import subprocess


import  jqdatasdk as jq

import data_struct 
import jq_acc

import magic



MY_NAME='mf'

# 工具入口

def print_usage( argv0 = MY_NAME ):
    print "Usage:"



def make_sure_working_dir():
    r = subprocess.call([ "mkdir"
            , "-p"
            , data_struct.WORKING_DIR 
            ])

    if 0 != r:
        raise Exception("Failed to make '%s'" % data_struct.WORKING_DIR );


def main(): 
    
    i = len(sys.argv)
    if ( i < 2 ):
        print_usage()
        return 1

    jq.auth(jq_acc.JQ_USERNAME ,jq_acc.JQ_PASSWORD )

    make_sure_working_dir()

    sub_command = sys.argv[1]

    if ('import' == sub_command ):
        return handle_import ( sys.argv[2:] )   
    elif ('fetch' == sub_command ):
        return magic.handle_fetch ( sys.argv[2:], MY_NAME  )   
    elif ('nofetch' == sub_command ):
        return magic.handle_nofetch ( sys.argv[2:], MY_NAME  )
    elif ('nofetch2' == sub_command ):
        return magic.handle_nofetch2 ( sys.argv[2:], MY_NAME  )
    elif ('backtest' == sub_command or 'bt' == sub_command):
        return magic.handle_backtest ( sys.argv[2:], MY_NAME  )
    elif ('list_index' == sub_command ):
        return magic.handle_list_index ( sys.argv[2:], MY_NAME )   
    elif ('exper' == sub_command ):
        return magic.handle_exper ( sys.argv[2:], MY_NAME )  
    elif ('help' == sub_command ):
        print_usage()
        return 1
    else:
        print "\n无效的‘子命令’ -- %s\n" % ( sub_command, )
        print_usage()
        return 1
  
    return 0

if __name__ == "__main__":
    r = main()
    sys.exit(r)


